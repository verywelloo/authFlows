openapi: 3.0.0
info:
  title: book-store
  version: 1.0.0
servers:
  - url: https://authflows.onrender.com
tags:
  - name: auth
  - name: user
  - name: book
  - name: Review
paths:
  /api/v1/auth/login:
    post:
      tags:
        - auth
      summary: Login User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: peter@gmail.com
                password: secret
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/verify-email:
    post:
      tags:
        - auth
      summary: Verify Email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                verificationToken: "123"
                email: peter@gmail.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/register:
    post:
      tags:
        - auth
      summary: Register User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: peter
                email: peter@gmail.com
                password: secret
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/auth/logout:
    get:
      tags:
        - auth
      summary: Logout User
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/users:
    get:
      tags:
        - user
      summary: Get All Users
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/users/{id}:
    get:
      tags:
        - user
      summary: Get Single User
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the student
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/users/showMe:
    get:
      tags:
        - user
      summary: Show Current User
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/users/updateUser:
    patch:
      tags:
        - user
      summary: Update User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: susanUpdated
                email: susan@gmail.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/users/updateUserPassword:
    patch:
      tags:
        - user
      summary: Update User Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                oldPassword: newSecret
                newPassword: secret
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/books:
    get:
      tags:
        - book
      summary: Get All Books
      parameters:
        - name: name
          in: query
          schema:
            type: string
          example: t
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - book
      summary: Create Book
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: testing
                author: testing
                description: a big black box
                featured: "false"
                price: 123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/books/{id}:
    get:
      tags:
        - book
      summary: Get Single Book
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the student
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - book
      summary: Update Book
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: testingUpdated
                author: testing
                description: a big black box
                featured: "false"
                price: 123
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the student
          schema:
            type: integer
            example: 123          
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/products/{id}:
    delete:
      tags:
        - book
      summary: Delete Book
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the student
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/products/uploadImage:
    post:
      tags:
        - book
      summary: Upload Image
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/products/{id}/reviews:
    get:
      tags:
        - book
      summary: Get Single Product Review
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the student
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/reviews:
    get:
      tags:
        - Review
      summary: Get All Review
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Review
      summary: Create Review
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book: "123"
                rating: "1"
                title: bad product
                comment: very, very bad product
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/reviews/{id}:
    get:
      tags:
        - Review
      summary: Get Single Review
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the student
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Review
      summary: Delete Review
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the student
          schema:
            type: integer
            example: 123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
    patch:
      tags:
        - Review
      summary: Update Review
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                book: "123"
                rating: "5"
                title: bad product updated
                comment: very, very bad product
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the student
          schema:
            type: integer
            example: 123          
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
